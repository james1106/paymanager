<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.qiyu" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:interceptors>
        <bean class="com.yunjiangzhe.tools.annotation.ServiceExceptionRetInterceptor"/>
    </mvc:interceptors>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler/>


    <!-- 定义无需Controller的url<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:/index"/>

    <!-- 将Controller抛出的异常转到特定View,  -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">/unauthorized</prop>
                <!--<prop key="java.lang.Throwable">error/500</prop>-->
            </props>
        </property>
    </bean>


    <!-- SpringMVC上传文件时,需配置MultipartResolver处理器 -->
   <!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        &lt;!&ndash; 指定所上传文件的总大小不能超过10MB......注意maxUploadSize属性的限制不是针对单个文件,而是所有文件的容量之和 &ndash;&gt;
        <property name="maxUploadSize" value="10000000"/>
    </bean>

    &lt;!&ndash; SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException &ndash;&gt;
    &lt;!&ndash; 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 &ndash;&gt;
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                &lt;!&ndash; 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/view/error_fileupload.jsp页面 &ndash;&gt;
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/error_fileupload</prop>
            </props>
        </property>
    </bean>-->
    <beans profile="debug">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:debug.properties"/>
    </beans>

    <beans profile="product">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/product.properties"/>
    </beans>
</beans>
